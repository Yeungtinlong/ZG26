---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by danny.
--- DateTime: 2025/8/27 14:36
---

local xlua_util = require("xlua.util");

local Vector3 = CS.UnityEngine.Vector3;
local CharacterState = CS.MBF.CharacterState;
local Quaternion = CS.UnityEngine.Quaternion;
local CharacterType = CS.TheGame.GM.CharacterType;

local GameLuaInterface = CS.TheGame.GM.GameLuaInterface;

local bulletTable = require("Designer/Bullet");
local designerFormula = require("Designer/Formula");

local timelineEvent = {};

local function GetAliveCaster(timelineObj)
    if (_G.Utils.IsNil(timelineObj.caster)) then
        return nil;
    end
    local cs = timelineObj.caster:GetComponent(typeof(CharacterState));
    if (_G.Utils.IsNil(cs) or cs.IsDead) then
        return nil;
    end
    return cs;
end

local function GetAliveMainTarget(timelineObj)
    if (_G.Utils.IsNil(timelineObj.source.mainTarget)) then
        return nil;
    end
    local cs = timelineObj.source.mainTarget;
    if (_G.Utils.IsNil(cs) or cs.IsDead) then
        return nil;
    end
    return cs;
end

function timelineEvent.CasterPlayAnim(timelineObj, args)
    local cs = GetAliveCaster(timelineObj);
    if (cs == nil) then
        return;
    end
    local animName = args[0];
    local face = Vector3.right;
    if (cs.side == 1) then
        face = Vector3.left;
    end
    cs:SetFace(face);
    cs:Play(animName, timelineObj.timescale);
end

function timelineEvent.CreateTrap(timelineObj, args)
    local worldPos = GameLuaInterface.GetMouseWorldPosition();
    local aoeLauncher = args[0];
    aoeLauncher.targetPos = worldPos;
    GameLuaInterface.CreateAoe(aoeLauncher);
end

-- 平A技能
function timelineEvent.A(timelineObj, args)
    local cs = GetAliveCaster(timelineObj);
    if (cs == nil) then
        return;
    end

    local bl = args[0];
    bl.caster = timelineObj.caster;
    bl.side = cs.side;
    bl.launchPos = cs.transform.position;
    bl.propWhileCast = cs.Prop;
    local target = GetAliveMainTarget(timelineObj);
    if (target == nil) then
        return;
    end

    bl.launchDir = target.transform.position - bl.launchPos;
    bl.targeting = function()
        return timelineObj.source.mainTarget.gameObject;
    end
    GameLuaInterface.CreateBullet(bl);
end

-- 多目标攻击
function timelineEvent.MultiA(timelineObj, args)
    local cs = GetAliveCaster(timelineObj);
    if (cs == nil) then
        return;
    end

    local bl = args[0];
    bl.caster = timelineObj.caster;
    bl.side = cs.side;
    bl.launchPos = cs.transform.position;
    bl.propWhileCast = cs.Prop;
    local skillObj = timelineObj.source;
    if (skillObj.targets == nil) then
        return;
    end
    for _, target in pairs(skillObj.targets) do
        if (not _G.Utils.IsNil(target) and not target.IsDead) then
            bl.launchDir = target.transform.position - bl.launchPos;
            bl.targeting = function()
                return target.gameObject;
            end
            GameLuaInterface.CreateBullet(bl);
        end
    end
end

function timelineEvent.TankFindSingleFoe(timelineObj, args)
    local cs = GetAliveCaster(timelineObj);
    if (cs == nil) then
        return;
    end
    local skillObj = timelineObj.source;
    local currentTarget = skillObj.mainTarget;
    if (not _G.Utils.IsNil(currentTarget) and currentTarget.side == cs.side) then
        currentTarget = nil;
    end
    if (_G.Utils.IsNil(currentTarget) or currentTarget.IsDead) then
        skillObj.mainTarget = GameLuaInterface.RandomGetCharacter(cs.side, true, false);
    end
end

function timelineEvent.FindMultiRandomTargets(timelineObj, args)
    local cs = GetAliveCaster(timelineObj);
    if (cs == nil) then
        return;
    end
    local skillObj = timelineObj.source;
    local characters = GameLuaInterface.RandomGetCharacters(cs.side, true, false, 3);
    skillObj.targets:Clear();
    for _, cs in pairs(characters) do
        skillObj.targets:Add(cs);
    end
end

function timelineEvent.AdFindSingleFoe(timelineObj, args)
    local cs = GetAliveCaster(timelineObj);
    if (cs == nil) then
        return;
    end
    local skillObj = timelineObj.source;
    local currentTarget = skillObj.mainTarget;
    if (not _G.Utils.IsNil(currentTarget) and currentTarget.side == cs.side) then
        currentTarget = nil;
    end
    if (_G.Utils.IsNil(currentTarget) or currentTarget.IsDead) then
        currentTarget = GameLuaInterface.RandomGetCharacterOfType(CharacterType.Tank, cs.side, true, false);
    end
    if (_G.Utils.IsNil(currentTarget) or currentTarget.IsDead) then
        currentTarget = GameLuaInterface.RandomGetCharacterOfType(CharacterType.Warrior, cs.side, true, false);
    end
    if (_G.Utils.IsNil(currentTarget) or currentTarget.IsDead) then
        currentTarget = GameLuaInterface.RandomGetCharacterOfType(CharacterType.Carry, cs.side, true, false);
    end
    if (_G.Utils.IsNil(currentTarget) or currentTarget.IsDead) then
        currentTarget = GameLuaInterface.RandomGetCharacter(cs.side, true, false);
    end
    skillObj.mainTarget = currentTarget;
end

function timelineEvent.FindLowestHealthAlly(timelineObj, args)
    local cs = GetAliveCaster(timelineObj);
    if (cs == nil) then
        return;
    end
    local skillObj = timelineObj.source;
    local currentTarget = GameLuaInterface.RandomGetCharacter(cs.side, false, true);
    skillObj.mainTarget = currentTarget;
end

function timelineEvent.MoveToFrontOfTarget(timelineObj, args)
    local cs = GetAliveCaster(timelineObj);
    if (cs == nil) then
        return;
    end

    local currentTarget = GetAliveMainTarget(timelineObj);
    if (_G.Utils.IsNil(currentTarget)) then
        return;
    end

    local srcPos = cs.transform.position;
    srcPos.y = 0;
    local vec = (currentTarget.transform.position - srcPos);
    vec.y = 0;
    local dir = vec.normalized;

    local dstPos = currentTarget.transform.position - dir * 0.5;
    dstPos.y = dstPos.y - 0.01;
    cs.transform:DOKill();
    cs.transform:DOMove(dstPos, 0.2);
end

function timelineEvent.MoveBackToGrid(timelineObj, args)
    local cs = GetAliveCaster(timelineObj);
    if (cs == nil) then
        return;
    end
    cs.transform:DOKill();
    cs.transform:DOMove(cs.Grid.transform.position, 0.2);
end

return timelineEvent;
