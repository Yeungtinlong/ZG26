---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by danny.
--- DateTime: 2025/8/27 14:36
---

local xlua_util = require("xlua.util");

local Vector3 = CS.UnityEngine.Vector3;
local CharacterState = CS.MBF.CharacterState;
local Quaternion = CS.UnityEngine.Quaternion;
local CharacterType = CS.TheGame.GM.CharacterType;

local GameLuaInterface = CS.TheGame.GM.GameLuaInterface;

local bulletTable = require("Designer/Bullet");
local designerFormula = require("Designer/Formula");

local timelineEvent = {};

local function GetAliveCaster(timelineObj)
    if (_G.Utils.IsNil(timelineObj.caster)) then
        return nil;
    end
    local cs = timelineObj.caster:GetComponent(typeof(CharacterState));
    if (_G.Utils.IsNil(cs) or cs.IsDead) then
        return nil;
    end
    return cs;
end

local function GetAliveMainTarget(timelineObj)
    if (_G.Utils.IsNil(timelineObj.source.mainTarget)) then
        return nil;
    end
    local cs = timelineObj.source.mainTarget;
    if (_G.Utils.IsNil(cs) or cs.IsDead) then
        return nil;
    end
    return cs;
end

function timelineEvent.SkillGuanyu(timelineObj, args)
    if (Utils.IsNil(timelineObj.caster)) then
        return;
    end
    local bl = args[0];
    local cs = timelineObj.caster:GetComponent(typeof(CharacterState));
    if (Utils.IsNil(cs) or cs.IsDead) then
        return;
    end

    bl.caster = timelineObj.caster;
    bl.side = cs.side;
    bl.launchPos = cs.transform.position + Vector3(0, 0.6, 0);
    bl.propWhileCast = cs.Prop;

    local target = bl.caster:GetComponent(typeof(CS.TheGame.ITargetHolder)):GetTarget();
    if (Utils.IsNil(target)) then
        return;
    end
    local targetDir = (target.transform.position - bl.launchPos).normalized;
    local skillObj = timelineObj.source;
    local odd = skillObj.grade & 1 == 1;
    local halfDegree = 0;
    if (odd) then
        halfDegree = (skillObj.grade - 1) * 5.0 * 0.5;
    else
        halfDegree = (skillObj.grade) * 5.0 * 0.5;
    end
    local startDegree = -halfDegree;
    for i = 1, skillObj.grade do
        bl.launchDir = Quaternion.AngleAxis(startDegree + (i - 1) * 5.0, Vector3.forward) * targetDir;
        bl.targeting = nil;
        GameLuaInterface.CreateBullet(bl);
    end

    -- 10级时，向所有范围内目标发射一箭
    if (skillObj.grade >= 10) then
        local targets = GameLuaInterface.GetAllTargets(bl.caster.gameObject, bl.side, true, false,
            designerFormula.GetRange(bl.propWhileCast.rng));
        for i, targetCs in pairs(targets) do
            if (targetCs.gameObject ~= target) then
                bl.launchDir = (targetCs.transform.position - bl.launchPos).normalized;
                bl.targeting = function()
                    return targetCs.gameObject;
                end
                GameLuaInterface.CreateBullet(bl);
            end
        end
    end
end

function timelineEvent.SkillZhangfei(timelineObj, args)
    if (Utils.IsNil(timelineObj.caster)) then
        return;
    end
    local bl = args[0];
    local cs = timelineObj.caster:GetComponent(typeof(CharacterState));
    if (Utils.IsNil(cs) or cs.IsDead) then
        return;
    end

    bl.caster = timelineObj.caster;
    bl.side = cs.side;
    bl.launchPos = cs.transform.position + Vector3(0, 0.6, 0);

    -- 修正攻击力加成
    local prop = cs.Prop;
    prop.atk = math.ceil(cs.Prop.atk * 0.9);
    bl.propWhileCast = prop;

    local target = bl.caster:GetComponent(typeof(CS.TheGame.ITargetHolder)):GetTarget();
    if (Utils.IsNil(target)) then
        return;
    end
    local targetDir = (target.transform.position - bl.launchPos).normalized;
    local skillObj = timelineObj.source;

    -- 10级时，射程无限大
    if (skillObj.grade >= 10) then
        bl.duration = 300;
    else
        bl.duration = math.ceil(designerFormula.GetRange(bl.propWhileCast.rng) / bl.speed / 0.02);
    end

    local function LowGradeFiveBullet()
        bl.launchDir = targetDir
        GameLuaInterface.CreateBullet(bl);
        for i = 1, skillObj.grade do
            bl.launchDir = Quaternion.AngleAxis(i * 30.0 / skillObj.grade, Vector3.forward) * targetDir;
            GameLuaInterface.CreateBullet(bl);

            bl.launchDir = Quaternion.AngleAxis(i * -30.0 / skillObj.grade, Vector3.forward) * targetDir;
            GameLuaInterface.CreateBullet(bl);
        end
    end

    local function HighGradeSkill()
        for j = 1, 2 do
            bl.launchDir = targetDir
            GameLuaInterface.CreateBullet(bl);
            for i = 1, skillObj.grade do
                bl.launchDir = Quaternion.AngleAxis(i * 60.0 / skillObj.grade, Vector3.forward) * targetDir;
                GameLuaInterface.CreateBullet(bl);

                bl.launchDir = Quaternion.AngleAxis(i * -60.0 / skillObj.grade, Vector3.forward) * targetDir;
                GameLuaInterface.CreateBullet(bl);
            end
            coroutine.yield(CS.UnityEngine.WaitForSeconds(0.1));
        end
    end

    local function MaxGradeSkill()
        for j = 1, 3 do
            for i = 1, 12 do
                bl.launchDir = Quaternion.AngleAxis(i * 30.0, Vector3.forward) * targetDir;
                GameLuaInterface.CreateBullet(bl);
            end
            coroutine.yield(CS.UnityEngine.WaitForSeconds(0.05));
        end
    end

    if (skillObj.grade >= 1 and skillObj.grade <= 4) then
        LowGradeFiveBullet();
    elseif (skillObj.grade >= 5 and skillObj.grade < 10) then
        GameLuaInterface.game:StartCoroutine(xlua_util.cs_generator(HighGradeSkill));
    elseif (skillObj.grade >= 10) then
        GameLuaInterface.game:StartCoroutine(xlua_util.cs_generator(MaxGradeSkill));
    end
end

function timelineEvent.SkillMachao(timelineObj, args)
    if (Utils.IsNil(timelineObj.caster)) then
        return;
    end
    local bl = args[0];
    local cs = timelineObj.caster:GetComponent(typeof(CharacterState));
    if (Utils.IsNil(cs) or cs.IsDead) then
        return;
    end

    bl.caster = timelineObj.caster;
    bl.side = cs.side;
    bl.propWhileCast = cs.Prop;

    local target = bl.caster:GetComponent(typeof(CS.TheGame.ITargetHolder)):GetTarget();
    if (Utils.IsNil(target)) then
        return;
    end
    local skillObj = timelineObj.source;

    local function CreateBulletSequentially()
        for i = 1, skillObj.grade do
            bl.launchPos = cs.transform.position;

            bl.launchDir = (target.transform.position - bl.launchPos).normalized;
            GameLuaInterface.CreateBullet(bl);
            -- 10级时，会增加两个伴弹
            if (skillObj.grade >= 10) then
                local dir = bl.launchDir;

                local leftPos = Vector3(-dir.y, dir.x, 0) + cs.transform.position;
                bl.launchPos = leftPos;
                bl.launchDir = (target.transform.position - leftPos).normalized;
                GameLuaInterface.CreateBullet(bl);

                local rightPos = Vector3(dir.y, -dir.x, 0) + cs.transform.position;
                bl.launchPos = rightPos;
                bl.launchDir = (target.transform.position - rightPos).normalized;
                GameLuaInterface.CreateBullet(bl);
            end

            coroutine.yield(CS.UnityEngine.WaitForSeconds(0.1));
        end
    end

    GameLuaInterface.game:StartCoroutine(xlua_util.cs_generator(CreateBulletSequentially));
end

function timelineEvent.SkillHuangzhong(timelineObj, args)
    if (Utils.IsNil(timelineObj.caster)) then
        return;
    end
    local bl = args[0];
    local cs = timelineObj.caster:GetComponent(typeof(CharacterState));
    if (Utils.IsNil(cs) or cs.IsDead) then
        return;
    end

    bl.caster = timelineObj.caster;
    bl.side = cs.side;
    bl.launchPos = cs.transform.position + Vector3(0, 0.6, 0);

    -- 修正攻击力加成
    local prop = cs.Prop;
    prop.atk = math.floor(cs.Prop.atk * 2.2 + 0.5);
    bl.propWhileCast = prop;

    local mainTarget = bl.caster:GetComponent(typeof(CS.TheGame.ITargetHolder)):GetTarget();
    if (Utils.IsNil(mainTarget)) then
        return;
    end

    local skillObj = timelineObj.source;

    -- 10级时，向所有范围内目标发射一箭
    if (skillObj.grade >= 10) then
        local targets = GameLuaInterface.GetAllTargets(bl.caster.gameObject, bl.side, true, false,
            designerFormula.GetRange(bl.propWhileCast.rng));
        for i, targetCs in pairs(targets) do
            if (targetCs.gameObject ~= mainTarget) then
                bl.launchDir = (targetCs.transform.position - bl.launchPos).normalized;
                bl.targeting = function()
                    return targetCs.gameObject;
                end
                bl.tween = function(t, bs, targetObj)
                    return bulletTable.Tween["ArrowTween"](t, bs, targetObj, 0.2, 1);
                end
                GameLuaInterface.CreateBullet(bl);
            end
        end
    end

    local targetDir = (mainTarget.transform.position - bl.launchPos).normalized;
    for i = 1, skillObj.grade do
        bl.launchDir = targetDir;
        bl.targeting = function()
            return mainTarget;
        end
        bl.tween = function(t, bs, targetObj)
            return bulletTable.Tween["ArrowTween"](t, bs, targetObj, (i - 1) * 0.2, 1);
        end
        GameLuaInterface.CreateBullet(bl);
    end
end

function timelineEvent.SkillZhugeliang(timelineObj, args)
    if (Utils.IsNil(timelineObj.caster)) then
        return;
    end
    local bl = args[0];
    local cs = timelineObj.caster:GetComponent(typeof(CharacterState));
    if (Utils.IsNil(cs) or cs.IsDead) then
        return;
    end

    bl.caster = timelineObj.caster;
    bl.side = cs.side;
    bl.launchPos = cs.transform.position + Vector3(0, 0.6, 0);
    -- 修正攻击力加成
    local prop = cs.Prop;
    prop.atk = math.floor(cs.Prop.atk * 0.9 + 0.5);
    bl.propWhileCast = prop;

    local skillObj = timelineObj.source;

    -- 10级时，向所有范围内目标发射一箭
    if (skillObj.grade >= 10) then
        local targets = GameLuaInterface.GetAllTargets(bl.caster.gameObject, bl.side, true, false,
            designerFormula.GetRange(bl.propWhileCast.rng));
        for i, targetCs in pairs(targets) do
            if (targetCs.gameObject ~= mainTarget) then
                bl.launchDir = (targetCs.transform.position - bl.launchPos).normalized;
                bl.targeting = function()
                    return targetCs.gameObject;
                end
                bl.tween = function(t, bs, targetObj)
                    return bulletTable.Tween["ArrowTween"](t, bs, targetObj, 0, 1);
                end
                GameLuaInterface.CreateBullet(bl);
            end
        end
    end

    local function CreateBulletSequentially()
        for i = 1, skillObj.grade do
            local target = cs:GetComponent(typeof(CS.TheGame.ITargetHolder)):GetTarget();
            if (Utils.IsNil(target)) then
                break;
            end
            local targetDir = (target.transform.position - bl.launchPos).normalized;

            bl.targeting = function()
                return target;
            end
            bl.launchDir = targetDir;
            bl.tween = function(t, bs, targetObj)
                if (i % 2 == 1) then
                    return bulletTable.Tween["ArrowTween"](t, bs, targetObj, (i - 1) * 0.2, 1);
                else
                    return bulletTable.Tween["ArrowTween"](t, bs, targetObj, (i - 2) * 0.2, -1);
                end
            end
            GameLuaInterface.CreateBullet(bl);
            coroutine.yield(CS.UnityEngine.WaitForSeconds(0.2));
        end
    end

    GameLuaInterface.game:StartCoroutine(xlua_util.cs_generator(CreateBulletSequentially));
end

function timelineEvent.CasterPlayAnim(timelineObj, args)
    local cs = GetAliveCaster(timelineObj);
    if (cs == nil) then
        return;
    end
    local animName = args[0];
    local face = Vector3.right;
    if (cs.side == 1) then
        face = Vector3.left;
    end
    cs:SetFace(face);
    cs:Play(animName, timelineObj.timescale);
end

function timelineEvent.CreateTrap(timelineObj, args)
    local worldPos = GameLuaInterface.GetMouseWorldPosition();
    local aoeLauncher = args[0];
    aoeLauncher.targetPos = worldPos;
    GameLuaInterface.CreateAoe(aoeLauncher);
end

-- 平A技能
function timelineEvent.A(timelineObj, args)
    local cs = GetAliveCaster(timelineObj);
    if (cs == nil) then
        return;
    end

    local bl = args[0];
    bl.caster = timelineObj.caster;
    bl.side = cs.side;
    bl.launchPos = cs.transform.position;
    bl.propWhileCast = cs.Prop;
    local target = GetAliveMainTarget(timelineObj);
    if (target == nil) then
        return;
    end

    bl.launchDir = target.transform.position - bl.launchPos;
    bl.targeting = function()
        return timelineObj.source.mainTarget.gameObject;
    end
    GameLuaInterface.CreateBullet(bl);
end

function timelineEvent.TankFindSingleFoe(timelineObj, args)
    local cs = GetAliveCaster(timelineObj);
    if (cs == nil) then
        return;
    end
    local skillObj = timelineObj.source;
    local currentTarget = skillObj.mainTarget;
    if (not _G.Utils.IsNil(currentTarget) and currentTarget.side == cs.side) then
        currentTarget = nil;
    end
    if (_G.Utils.IsNil(currentTarget) or currentTarget.IsDead) then
        skillObj.mainTarget = GameLuaInterface.RandomGetCharacter(cs.side, true, false);
    end
end

function timelineEvent.AdFindSingleFoe(timelineObj, args)
    local cs = GetAliveCaster(timelineObj);
    if (cs == nil) then
        return;
    end
    local skillObj = timelineObj.source;
    local currentTarget = skillObj.mainTarget;
    if (not _G.Utils.IsNil(currentTarget) and currentTarget.side == cs.side) then
        currentTarget = nil;
    end
    if (_G.Utils.IsNil(currentTarget) or currentTarget.IsDead) then
        currentTarget = GameLuaInterface.RandomGetCharacterOfType(CharacterType.Tank, cs.side, true, false);
    end
    if (_G.Utils.IsNil(currentTarget) or currentTarget.IsDead) then
        currentTarget = GameLuaInterface.RandomGetCharacterOfType(CharacterType.Warrior, cs.side, true, false);
    end
    if (_G.Utils.IsNil(currentTarget) or currentTarget.IsDead) then
        currentTarget = GameLuaInterface.RandomGetCharacterOfType(CharacterType.Carry, cs.side, true, false);
    end
    if (_G.Utils.IsNil(currentTarget) or currentTarget.IsDead) then
        currentTarget = GameLuaInterface.RandomGetCharacter(cs.side, true, false);
    end
    skillObj.mainTarget = currentTarget;
end

function timelineEvent.FindLowestHealthAlly(timelineObj, args)
    local cs = GetAliveCaster(timelineObj);
    if (cs == nil) then
        return;
    end
    local skillObj = timelineObj.source;
    local currentTarget = GameLuaInterface.RandomGetCharacter(cs.side, false, true);
    skillObj.mainTarget = currentTarget;
end

function timelineEvent.MoveToFrontOfTarget(timelineObj, args)
    local cs = GetAliveCaster(timelineObj);
    if (cs == nil) then
        return;
    end

    local currentTarget = GetAliveMainTarget(timelineObj);
    if (_G.Utils.IsNil(currentTarget)) then
        return;
    end

    local srcPos = cs.transform.position;
    srcPos.y = 0;
    local vec = (currentTarget.transform.position - srcPos);
    vec.y = 0;
    local dir = vec.normalized;

    local dstPos = currentTarget.transform.position - dir * 0.5;
    dstPos.y = dstPos.y - 0.01;
    cs.transform:DOKill();
    cs.transform:DOMove(dstPos, 0.2);
end

function timelineEvent.MoveBackToGrid(timelineObj, args)
    local cs = GetAliveCaster(timelineObj);
    if (cs == nil) then
        return;
    end
    cs.transform:DOKill();
    cs.transform:DOMove(cs.Grid.transform.position, 0.2);
end

return timelineEvent;
